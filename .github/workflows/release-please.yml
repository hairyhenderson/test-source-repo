name: release-please

on:
  push:
    branches:
      - main

permissions:
  contents: write
  pull-requests: write

jobs:
  release-please:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/create-github-app-token@v1
        id: app-token
        with:
          app-id: ${{ vars.APP_ID }}
          private-key: ${{ secrets.PRIVATE_KEY }}
      - name: Install release-please
        run: npm -g install release-please
      - name: Run release-please github-release
        id: release
        run: |
          release-please \
            --token ${{ steps.app-token.outputs.token }} \
            --repo-url ${{ github.repository }} \
              github-release \
              --draft | tee rp-out.log

          jq -R 'fromjson?' rp-out.log > rp-out.json
          echo "json output: $(cat rp-out.json)"

          # now set outputs
          cat rp-out.json >> "$GITHUB_ENV"
      - uses: googleapis/release-please-action@v4
        with:
          token: ${{ steps.app-token.outputs.token }}
          config-file: release-please-config.json
      - uses: actions/checkout@v4
        if: ${{ steps.release.outputs.release_created }}
      - run: |
          echo "release-please outputs: ${{ steps.release.outputs }}"

          echo ${{ steps.release.outputs.body }} > notes.md
          echo "${{ steps.release.outputs.tag_name }}" > release-asset.txt

          # assert that tag_name isn't empty
          if [ -z "${{ steps.release.outputs.tag_name }}" ]; then
            echo "tag_name is empty"
            exit 1
          fi

          gh release create \
            ${{ steps.release.outputs.tag_name }} \
            release-asset.txt \
            --draft \
            --discussion-category "General" \
            --notes-file=notes.md
          # gh release upload ${{ steps.release.outputs.tag_name }} release-asset.txt
        env:
          GH_TOKEN: ${{ steps.app-token.outputs.token }}
        if: ${{ steps.release.outputs.release_created }}
